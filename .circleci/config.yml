version: 2.1
executors:
  build-executor:
    docker:
      - image: ghcr.io/retrage/edk2-nightly:latest
    working_directory: /src/edk2
commands:
  init:
    description: "Initialize"
    steps:
      - run:
          name: Checkout EDK2
          working_directory: /src
          command: |
            git clone https://github.com/tianocore/edk2.git --depth 1
      - run:
          name: Create target directory
          command: |
            mkdir -p /src/edk2-nightly/bin
      - run:
          name: Update submodules
          command: |
            git submodule update --init --recursive
      - run:
          name: Compile build tools
          command: |
            make -C BaseTools
  ovmf:
    description: "Build OVMF"
    parameters:
      dsc:
        type: string
        default: "X64"
      arch:
        type: string
        default: "X64"
      target:
        type: string
        default: "RELEASE"
    steps:
      - run:
          name: Build OVMF
          command: |
            source ./edksetup.sh
            build -q \
              -p OvmfPkg/OvmfPkg<< parameters.dsc >>.dsc \
              -D SECURE_BOOT_ENABLE=TRUE \
              -b << parameters.target >> \
              -a << parameters.arch >> \
              -t GCC5
      - run:
          name: Deploy OVMF
          working_directory: /src/edk2-nightly
          environment:
            SRC: /src/edk2/Build/Ovmf<< parameters.dsc >>/<< parameters.target >>_GCC5/FV
            DST: /src/edk2-nightly/bin/<< parameters.target >><< parameters.dsc >>
          command: |
            cp ${SRC}/OVMF.fd ${DST}_OVMF.fd
            cp ${SRC}/OVMF_CODE.fd ${DST}_OVMF_CODE.fd
            cp ${SRC}/OVMF_VARS.fd ${DST}_OVMF_VARS.fd
      - persist_to_workspace:
          root: /src/edk2-nightly
          paths:
            - bin/<< parameters.target >><< parameters.dsc >>_OVMF.fd
            - bin/<< parameters.target >><< parameters.dsc >>_OVMF_CODE.fd
            - bin/<< parameters.target >><< parameters.dsc >>_OVMF_VARS.fd
  shell:
    description: "Build UEFI Shell"
    parameters:
      arch:
        type: string
        default: "X64"
      target:
        type: string
        default: "RELEASE"
      guid:
        type: string
        default: "EA4BB293-2D7F-4456-A681-1F22F42CD0BC"
    steps:
      - run:
          name: Build UEFI Shell
          command: |
            export GCC5_ARM_PREFIX=arm-linux-gnueabi-
            export GCC5_AARCH64_PREFIX=aarch64-linux-gnu-
            export GCC5_LOONGARCH64_PREFIX=loongarch64-linux-gnu-
            export GCC5_RISCV64_PREFIX=riscv64-unknown-elf-
            source ./edksetup.sh
            build -q \
              -p ShellPkg/ShellPkg.dsc \
              -b << parameters.target >> \
              -a << parameters.arch >> \
              -t GCC5
      - run:
          name: Deploy UEFI Shell
          working_directory: /src/edk2-nightly
          environment:
            SRC: /src/edk2/Build/Shell/<< parameters.target >>_GCC5/<< parameters.arch >>
            DST: /src/edk2-nightly/bin/<< parameters.target >><< parameters.arch >>
          command: |
            cp ${SRC}/Shell_<< parameters.guid >>.efi ${DST}_Shell.efi
      - persist_to_workspace:
          root: /src/edk2-nightly
          paths:
            - bin/<< parameters.target >><< parameters.arch >>_Shell.efi
  arm-virt:
    description: "Build ArmVirt"
    parameters:
      arch:
        type: string
        default: "AARCH64"
      target:
        type: string
        default: "RELEASE"
    steps:
      - run:
          name: Build ArmVirt
          command: |
            export GCC5_ARM_PREFIX=arm-linux-gnueabi-
            export GCC5_AARCH64_PREFIX=aarch64-linux-gnu-
            source ./edksetup.sh
            build -q \
              -p ArmVirtPkg/ArmVirtQemu.dsc \
              -D SECURE_BOOT_ENABLE=TRUE \
              -b << parameters.target >> \
              -a << parameters.arch >> \
              -t GCC5
      - run:
          name: Deploy ArmVirt
          working_directory: /src/edk2-nightly
          environment:
            SRC: /src/edk2/Build/ArmVirtQemu-<< parameters.arch>>/<< parameters.target >>_GCC5/FV
            DST: /src/edk2-nightly/bin/<< parameters.target >><< parameters.arch >>
          command: |
            cp ${SRC}/QEMU_EFI.fd ${DST}_QEMU_EFI.fd
            cp ${SRC}/QEMU_VARS.fd ${DST}_QEMU_VARS.fd
      - persist_to_workspace:
          root: /src/edk2-nightly
          paths:
            - bin/<< parameters.target >><< parameters.arch >>_QEMU_EFI.fd
            - bin/<< parameters.target >><< parameters.arch >>_QEMU_VARS.fd
jobs:
  build-ia32-qemu:
    executor: build-executor
    steps:
      - init
      - ovmf:
          dsc: "Ia32"
          arch: "IA32"
          target: "RELEASE"
      - ovmf:
          dsc: "Ia32"
          arch: "IA32"
          target: "DEBUG"
  build-x64-qemu:
    executor: build-executor
    steps:
      - init
      - ovmf:
          target: "RELEASE"
      - ovmf:
          target: "DEBUG"
  build-arm-qemu:
    executor: build-executor
    steps:
      - init
      - arm-virt:
          arch: "ARM"
          target: "RELEASE"
      - arm-virt:
          arch: "ARM"
          target: "DEBUG"
  build-aarch64-qemu:
    executor: build-executor
    steps:
      - init
      - arm-virt:
          target: "RELEASE"
      - arm-virt:
          target: "DEBUG"
  build-ia32-shell:
    executor: build-executor
    steps:
      - init
      - shell:
          arch: "IA32"
          target: "RELEASE"
      - shell:
          arch: "IA32"
          target: "DEBUG"
  build-x64-shell:
    executor: build-executor
    steps:
      - init
      - shell:
          arch: "X64"
          target: "RELEASE"
      - shell:
          arch: "X64"
          target: "DEBUG"
  build-arm-shell:
    executor: build-executor
    steps:
      - init
      - shell:
          arch: "ARM"
          target: "DEBUG"
      - shell:
          arch: "ARM"
          target: "RELEASE"
  build-aarch64-shell:
    executor: build-executor
    steps:
      - init
      - shell:
          arch: "AARCH64"
          target: "DEBUG"
      - shell:
          arch: "AARCH64"
          target: "RELEASE"
  build-riscv64-shell:
    executor: build-executor
    steps:
      - init
      - shell:
          arch: "RISCV64"
          target: "DEBUG"
      - shell:
          arch: "RISCV64"
          target: "RELEASE"
  build-loongarch64-shell:
    executor: build-executor
    steps:
      - init
      - shell:
          arch: "LOONGARCH64"
          target: "DEBUG"
      - shell:
          arch: "LOONGARCH64"
          target: "RELEASE"
  deploy:
    executor: build-executor
    steps:
      - add_ssh_keys:
          fingerprints:
            - "07:24:6a:07:33:28:51:58:ad:57:cd:2c:be:4e:f1:06"
      - checkout:
          path: /src/edk2-nightly
      - attach_workspace:
          at: /src/edk2-nightly
      - run:
          name: Deploy binaries
          working_directory: /src/edk2-nightly
          command: |
            bash deploy.sh
workflows:
  version: 2.1
  commit:
    jobs:
      - build-ia32-qemu
      - build-x64-qemu
      - build-arm-qemu
      - build-aarch64-qemu
      - build-ia32-shell
      - build-x64-shell
      - build-arm-shell
      - build-aarch64-shell
      - build-riscv64-shell
      - build-loongarch64-shell
      - deploy:
          requires:
            - build-ia32-qemu
            - build-x64-qemu
            - build-arm-qemu
            - build-aarch64-qemu
            - build-ia32-shell
            - build-x64-shell
            - build-arm-shell
            - build-aarch64-shell
            - build-riscv64-shell
            - build-loongarch64-shell
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build-ia32-qemu
      - build-x64-qemu
      - build-arm-qemu
      - build-aarch64-qemu
      - build-ia32-shell
      - build-x64-shell
      - build-arm-shell
      - build-aarch64-shell
      - build-riscv64-shell
      - build-loongarch64-shell
      - deploy:
          requires:
            - build-ia32-qemu
            - build-x64-qemu
            - build-arm-qemu
            - build-aarch64-qemu
            - build-ia32-shell
            - build-x64-shell
            - build-arm-shell
            - build-aarch64-shell
            - build-riscv64-shell
            - build-loongarch64-shell
